#include <iostream>
#define N 11
#define M 20
using namespace std;
int main() {
	



bool obraz[N][M] = {
{ 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 },
{ 0,0,0,1,0,1,1,1,0,0,0,0,0,0,1,1,0,0,0,0 },
{ 0,0,0,1,0,1,1,1,0,0,1,1,1,1,1,1,1,0,0,0 },
{ 0,0,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,0,0,0 },
{ 0,0,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0 },
{ 0,0,0,0,0,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0 },
{ 0,0,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0 },
{ 0,0,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,0,0,0 },
{ 0,0,1,1,0,1,1,1,0,0,1,1,1,1,1,1,1,0,0,0 },
{ 0,0,1,1,0,1,1,1,0,0,0,0,0,0,1,1,0,0,0,0 },
{ 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 },
};

bool obraz2[N][M] = {
{ 1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 },
{ 1,1,1,1,0,1,1,1,0,0,0,0,0,0,1,1,0,0,0,0 },
{ 0,0,0,1,0,1,1,1,0,0,1,1,1,1,1,1,1,0,0,0 },
{ 0,0,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,0,0,0 },
{ 0,0,1,1,1,1,1,0,0,0,0,0,1,0,0,0,0,0,0,0 },
{ 0,0,0,0,0,1,1,0,0,1,1,1,1,0,0,0,0,0,0,0 },
{ 0,0,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0 },
{ 0,0,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,0,0,0 },
{ 0,0,1,1,0,1,1,1,0,1,1,1,1,1,1,1,1,0,0,0 },
{ 0,0,1,1,0,1,1,1,0,0,0,0,0,0,1,1,0,0,0,0 },
{ 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,1,0 },
};
	bool nowy[N][M]= {
{ 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 },
{ 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 },
{ 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 },
{ 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 },
{ 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 },
{ 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 },
{ 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 },
{ 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 },
{ 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 },
{ 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 },
{ 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 }
};


	bool maska[3][3] = { { 1,1,1 },
                        { 1,1,1 },
                        { 1,1,1 }, };
                        
                      
	
	for (int i = 1; i < N; i++){
		for (int j = 1; j < M; j++){
			printf("%c",(obraz[i][j]==1) ? 0xDB : 0xB0);
		}
		cout << endl;
	}
	
	/*Dope³nienie zbioru*/  
	cout<<"Dopelnienie zbioru"<<endl;
     	for (int i = 1; i < N; i++){
		for (int j = 1; j < M; j++){
			nowy[i][j] = !obraz[i][j];
			printf("%c",(nowy[i][j]==1) ? 0xDB : 0xB0);
		}
		cout << endl;
	}
	
	
	
		/*suma zbioru*/  
	cout<<"suma zbioru"<<endl;
     	for (int i = 1; i < N; i++){
		for (int j = 1; j < M; j++){
			nowy[i][j] = obraz[i][j] + obraz2[i][j];
			printf("%c",(nowy[i][j]==1) ? 0xDB : 0xB0);
		}
		cout << endl;
	}

/*suma zbioru*/  
	cout<<"iloczyn zbioru"<<endl;
     	for (int i = 1; i < N; i++){
		for (int j = 1; j < M; j++){
			nowy[i][j] = obraz[i][j] && obraz2[i][j];
			printf("%c",(nowy[i][j]==1) ? 0xDB : 0xB0);
		}
		cout << endl;
	}

	return 0;
}
