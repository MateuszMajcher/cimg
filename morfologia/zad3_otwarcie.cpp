#include <iostream>
#define N 11
#define M 20
using namespace std;
int main() {
	



bool obraz[N][M] = {
{ 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 },
{ 0,0,0,1,0,1,1,1,0,0,0,0,0,0,1,1,0,0,0,0 },
{ 0,0,0,1,0,1,1,1,0,0,1,1,1,1,1,1,1,0,0,0 },
{ 0,0,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,0,0,0 },
{ 0,0,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0 },
{ 0,0,0,0,0,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0 },
{ 0,0,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0 },
{ 0,0,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,0,0,0 },
{ 0,0,1,1,0,1,1,1,0,0,1,1,1,1,1,1,1,0,0,0 },
{ 0,0,1,1,0,1,1,1,0,0,0,0,0,0,1,1,0,0,0,0 },
{ 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 },
};
	bool nowy[N][M]= {
{ 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 },
{ 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 },
{ 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 },
{ 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 },
{ 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 },
{ 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 },
{ 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 },
{ 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 },
{ 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 },
{ 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 },
{ 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 }
};


	bool maska[3][3] = { { 1,1,1 },
                        { 1,1,1 },
                        { 1,1,1 }, };
	
	for (int i = 1; i < N; i++){
		for (int j = 1; j < M; j++){
			printf("%c",(obraz[i][j]==1) ? 0xDB : 0xB0);
		}
		cout << endl;
	}
	
	

	for (int i = 1; i < N-1; i++){
		for (int j = 1; j < M-1; j++){
			nowy[i][j] = obraz[i - 1][j - 1] && maska[0][0] && obraz[i - 1][j] && maska[0][1] && obraz[i - 1][j + 1] && maska[0][2] &&
				obraz[i][j - 1] && maska[1][0] && obraz[i][j] && maska[1][1] && obraz[i][j + 1] && maska[1][2] &&
				obraz[i + 1][j - 1] && maska[2][0] && obraz[i + 1][j] && maska[2][1] && obraz[i + 1][j + 1] && maska[2][2];
				
	
		}
	
	}
		cout <<"erozja"<< endl;
    for (int i = 1; i < N; i++){
		for (int j = 1; j < M; j++){
			printf("%c",(nowy[i][j]==1) ? 0xDB : 0xB0);
		}
		cout << endl;
	}
    /*dylatacja*/
    
    	for (int i = 1; i < N-1; i++){
		for (int j = 1; j < M-1; j++){
			obraz[i][j] = nowy[i - 1][j - 1] && maska[0][0] || nowy[i - 1][j] && maska[0][1] || nowy[i - 1][j + 1] && maska[0][2] ||
				nowy[i][j - 1] && maska[1][0] || nowy[i][j] && maska[1][1] || nowy[i][j + 1] && maska[1][2] ||
				nowy[i + 1][j - 1] && maska[2][0] || nowy[i + 1][j] && maska[2][1] || nowy[i + 1][j + 1] && maska[2][2];
				
			
		}
	
	}
	cout <<"dylatacja"<< endl;
    for (int i = 1; i < N; i++){
		for (int j = 1; j < M; j++){
			printf("%c",(obraz[i][j]==1) ? 0xDB : 0xB0);
		}
		cout << endl;
	}
    


	


	return 0;
}
